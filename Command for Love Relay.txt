创建loverelay的操作步骤（win10环境）

一、搭建虚拟环境
1、先安装virtualenv包
pip install --user virtualenv

2、切换到LoveRelay目录，创建一个虚拟环境
cd C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay
python C:\Users\Administrator\AppData\Roaming\Python\Python36\site-packages\virtualenv.py loverelay

3、激活虚拟环境
C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay\loverelay\Scripts\activate

4、安装Django
pip install Django


二、创建项目
5、创建loverelay项目
django-admin.py startproject loverelay .

6、mysql中创建一个数据库loverelay

7、安装mysql client
pip install mysqlclient

8、迁移第一批数据到数据库
python manage.py migrate
这个命令执行完后，会发现mysql数据库中多了一堆表，有些是空的

9、运行服务，以检查是否创建了项目
cmd
cd C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay
C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay\loverelay\Scripts\activate
python manage.py runserver
另打开一个dos窗口，进入shell，交互命令，以方便检查数据
cd C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay
C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay\loverelay\Scripts\activate
python manage.py shell

三、开始建应用程序
10、创建应用程序
python manage.py startapp lr

11、创建模型
在models.py中定义各个class，它们代表不同的数据库中的表，以及表之间的关系
见LoveRelay\lr\models.py

12、在settings.py中登记app lr

13、把models中定义的表同步到数据库中
要先进入虚拟环境
cd C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay
C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay\loverelay\Scripts\activate
python manage.py makemigrations lr
python manage.py migrate
当执行有错时，可以删除migrations目录下对应的py文件，相当于操作回退，然后可以重复操作。
对于有PK外键的表，得先把主表的数据删除掉，才能加得进去引用的表的字段，否则老是提示引用约束建立错误。

14、为lr创建超级用户
python manage.py createsuperuser
username:lr_admin
password:bdf@1234

15、向管理网站注册模型
修改admin.py，import models里面的各个表
register(表）

16、安装django-bootstrap3
在虚拟环境下执行命令：
pip install django-bootstrap3

17、在settings.py中添加django-bootstrap3 (p212)

18、用bootstrap3美化页面

四、代码上传到github
19、安装github for windows
https://git-scm.com/download/win
运行git bash

20、初始化一个project
cd /C/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay
git init
git
git commit -m "initialize Love Relay"
网站上建项目Love Relay
(第一往网站推文件，需要添加ssh key），参见：
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374385852170d9c7adf13c30429b9660d0eb689dd43a000

21、同步文件到服务器
cd /C/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay
git add .
git commit -m "updated "
git push lr master

五、安装Apache服务器
22、下载apache2.4
http://www.apachelounge.com/download/

23、直接解压上面下载的zip文件，放c:\Apach24。在环境变量中增加path c:\apache24\bin

24、修改c:\apache24\conf\httpd.conf，按如下内容改：
ServerRoot "c:/Apache24"
Listen 127.0.0.1:8081
ServerName www.example.com:8081
DocumentRoot "c:/Apache24/htdocs"
<Directory "c:/Apache24/htdocs">
#下面这几行是添加进去的，放在所有LoadModule...之后
LoadFile "c:/python/python36.dll"
LoadModule wsgi_module "c:/python/lib/site-packages/mod_wsgi/server/mod_wsgi.cp36-win_amd64.pyd"
#项目的wsgi.py配置文件路径  
WSGIScriptAlias / C:/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay/loverelay/wsgi.py
WSGIPythonHome C:/Python
#项目路径  
WSGIPythonPath C:/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay
<Directory C:/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay/loverelay>
<Files wsgi.py>
    Require all granted
</Files>
</Directory>

25、在IE中试一下
http://127.0.0.1:8081/index.html
如果出现It works!证明apache配置成功。

26、安装mod_wsgi
pip install wheel
下载一个mod_wsgi，注意python、apache的版本和win32/64位的选择
http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi
把下载的whl文件放c:\temp
pip install c:\temp\???.whl(指whl文件全名)

27、配置apache24, mod_wsgi, django项目
打开C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay\loverelay\wsgi.py
添加
import sys
sys.path.append('C:/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay/')
sys.path.append('C:/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay/loverelay/')
sys.path.append('C:/Users/Administrator/Documents/Files/ITL/Python/python_work/LoveRelay/loverelay/lib/site-packages/')

28、启动web服务
管理员权限cmd
httpd -k start
检查c:\apache24\logs\error.log，看服务启动有无报错

29、IE运行
http://127.0.0.1:8081/

30、修改程序之后，需要重启服务，才能生效
管理员权限cmd
httpd -k restart

六、在项目中引用静态文件，如图片（参考https://www.cnblogs.com/lfoder/p/6013142.html）
31、修改settings.py文件
STATIC_URL = '/static/'后面添加一行
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

32、在urls.py中导入
from django.conf import settings
from django.conf.urls.static import static
并在urlpatterns后面添加
 + static(settings.STATIC_URL, document_root = settings.STATIC_ROOT)

33、静态文件必须放在LoveRelay\static\下面

34、在模板文件中引用静态文件
{% load static %}
<img src="{% static 'a.jpg' %}" alt="my image" height="200"></img>

七、mySQL里面的几个存储过程
35、判断两个id是否有引用关系
CREATE DEFINER=`root`@`localhost` PROCEDURE `ischild`(in id1 int, in id2 int, out ischild int)
BEGIN
  DECLARE done int default 0;
  SET SQL_SAFE_UPDATES = 0 ;
  DROP TABLE IF EXISTS temp;
  CREATE TABLE temp 
      (
        id int,
        pid int, 
        level int 
      );
  
  set ischild = 0;
  Set @Level=0 ;
  insert into temp (id, pid, level)
      select id, parentmoney_id, @level
	  from lr_money 
      where parentmoney_id=id2;
  
  select id from temp where id=id1;
  if FOUND_ROWS() > 0 then
	set ischild = 1;
    set done = 1;
  end if;

  while done = 0 do
    set @level=@level+1;
    insert into temp (id, pid, level)
      select id, parentmoney_id, @level
	  from lr_money 
      where parentmoney_id in
        (select id from temp where level=@level-1);
	if found_rows()= 0 then
      set done = 1;
	else
      select id from temp where id=id1 limit 1;
	  if FOUND_ROWS() > 0 then
	    set ischild = 1;
        set done = 1;
	  end if;
    end if;
  end while;
   
 SET SQL_SAFE_UPDATES = 1; 
 DROP TABLE IF EXISTS temp;

END

36、把money按从第一级到最后一级，树形列出来
CREATE DEFINER=`root`@`localhost` PROCEDURE `createmoneytree`(out sessionid varchar(30))
BEGIN
  DECLARE done int default 0;
  declare tmpmoney_id, level0 int;
  declare rs cursor for select money_id, level from moneyTemp order by id desc limit 1;
  declare continue handler for sqlstate '02000' set done=1;
  SET SQL_SAFE_UPDATES = 0 ;
#  set @rootid = rootid;
  DROP TEMPORARY TABLE IF EXISTS moneyTemp;
  CREATE TEMPORARY TABLE moneyTemp 
      (
        id INT NOT NULL AUTO_INCREMENT,
        money_id int,
        level int, 
        PRIMARY KEY (id)
      );
  
  set @tmpsessionid = date_format(now(),'%Y%m%d%H%i%S%f');
#  //used for return value
  set sessionid = @tmpsessionid;   
  
  Set @Level=0 ;
#  INSERT into lr_moneynode (money_id, amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, level, cort, sessionid) 
#      SELECT id,amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, @Level,ID, @tmpsessionid 
#      FROM lr_money 
#      WHERE parentmoney_id is NULL;
  insert into moneyTemp (money_id, level) 
      select id, @level
	  from lr_money 
      where parentmoney_id is NULL;
  
  repeat
    open rs;
	fetch rs into tmpmoney_id, level0;
	if not done then


		  SET @Level=Level0+1 ;

          INSERT into lr_moneynode (money_id, amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, level, cort, sessionid) 
			   SELECT ID, amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, @Level, ID, @tmpsessionid 
			   FROM lr_money
			   WHERE id=tmpmoney_id;
		  insert into moneyTemp (money_id, level)
              select id, @level 
			  from lr_money 
			  where parentmoney_id=tmpmoney_id;
		  delete from moneyTemp
			  where money_id=tmpmoney_id;
	end if;
    close rs;
  until done end repeat;

 update lr_moneynode
     set comment=concat(repeat('...', level), level)
     where sessionid=@tmpsessionid;
  
   
 SET SQL_SAFE_UPDATES = 1; 
 select * from lr_moneynode where sessionid=@tmpsessionid;

END

37、指定一个id，把该id的下级money列出来，按树形显示
CREATE DEFINER=`root`@`localhost` PROCEDURE `listchild`(in rootid int, out sessionid char(20))
BEGIN
  DECLARE done int default 0;
  declare tmpmoney_id, level0 int;
  declare rs cursor for select money_id, level from moneyTemp order by id desc limit 1;
  declare continue handler for sqlstate '02000' set done=1;
  SET SQL_SAFE_UPDATES = 0 ;
  set @rootid = rootid;
  DROP TEMPORARY TABLE IF EXISTS moneyTemp;
  CREATE TEMPORARY TABLE moneyTemp 
      (
        id INT NOT NULL AUTO_INCREMENT,
        money_id int,
        level int, 
        PRIMARY KEY (id)
      );
  
/*  DROP TEMPORARY TABLE IF EXISTS moneyTemp;
  CREATE TEMPORARY TABLE moneyTemp AS select * from lr_money where id=v;
  select add1(v);
  alter table moneyTemp add column t int;
  update moneyTemp set t = 1;
  select * from moneyTemp;
 
*/
  
  set @tmpsessionid = date_format(now(),'%Y%m%d%H%i%S%f');
  set sessionid = @tmpsessionid;
  
  Set @Level=0 ;
  INSERT into lr_moneynode (money_id, amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, level, cort, sessionid) 
      SELECT id,amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, @Level,ID, @tmpsessionid 
      FROM lr_money 
      WHERE ID=@rootid;
  insert into moneyTemp (money_id, level) 
      select id, @level
	  from lr_money 
      where parentmoney_id=@rootid;
  
  repeat
    open rs;
	fetch rs into tmpmoney_id, level0;
	if not done then


		  SET @Level=Level0+1 ;

          INSERT into lr_moneynode (money_id, amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, level, cort, sessionid) 
			   SELECT ID, amount, comment, cashtype_id, user_id, purpose_id, parentmoney_id, @Level, ID, @tmpsessionid 
			   FROM lr_money
			   WHERE id=tmpmoney_id;
		  insert into moneyTemp (money_id, level)
              select id, @level 
			  from lr_money 
			  where parentmoney_id=tmpmoney_id;
		  delete from moneyTemp
			  where money_id=tmpmoney_id;
	end if;
    close rs;
  until done end repeat;

 update lr_moneynode
     set comment=concat(repeat('...', level), level)
     where sessionid=@tmpsessionid;
  
   
 SET SQL_SAFE_UPDATES = 1; 

END




下面都是临时可能用得到的一些命令，怕忘记了，暂时放这里：



python自带的命令建一个web服务器：
DOS方式
进到想作为web服务根目录的目录下
python -m http.server --cgi 8080
http://localhost:8080/或http://127.0.0.1:8080/都可以


git remote add lr git@github.com:HansWan/LoveRelay.git
git pull lr master --allow-unrelated-histories
git push -u lr master
git push --set-upstream lr master
git remote -v



cd C:\Users\Administrator\Documents\Files\ITL\Python\python_work\LoveRelay

ll_env\Scripts\activate

python manage.py makemigrations learning_logs
python manage.py migrate

django-admin.py startproject learning_log .
python manage.py startapp learning_logs

python manage.py runserver



CREATE DEFINER=`root`@`localhost` PROCEDURE `se`(in rootid int, out sessionid varchar(30))
BEGIN
#  DECLARE @Level int ;
  SET SQL_SAFE_UPDATES = 0 ;
  set @rootid = rootid;

/*  DROP TEMPORARY TABLE IF EXISTS moneyTemp;
  CREATE TEMPORARY TABLE moneyTemp AS select * from lr_money where id=v;
  select add1(v);
  alter table moneyTemp add column t int;
  update moneyTemp set t = 1;
  select * from moneyTemp;
  
  
  drop PROCEDURE IF EXISTS  showTreeNodes_yongyupost2000//

CREATE PROCEDURE showTreeNodes_yongyupost2000 (IN rootid INT)
 BEGIN
 
*/
  
  set @tmpsessionid = date_format(now(),'%Y%m%d%H%i%S%f');
  set sessionid = @tmpsessionid;

  set @sql = concat('drop TABLE IF EXISTS ', @temptablename);
  prepare stml from @sql;
  execute stml;
  set @sql = concat('CREATE TABLE ', @temptablename, ' (id int, nLevel int, sCort varchar(8000));');
  prepare stml from @sql;
  execute stml;
  
  Set @Level=0 ;
  set @sql = concat('INSERT into ', @temptablename, ' SELECT id,@Level,ID FROM lr_money WHERE ID=@rootid;');
  prepare stml from @sql;
  execute stml;

  WHILE ROW_COUNT()>0 DO
   SET @Level=@Level+1 ;

   set @sql = concat('INSERT into ', @temptablename, ' SELECT A.ID,@Level,concat(B.sCort,A.ID) FROM lr_money A,', @temptablename, ' B  WHERE A.parentmoney_id=B.ID AND B.nLevel=@Level-1;');
   prepare stml from @sql;
   execute stml;
    
  END WHILE;
   
 SET SQL_SAFE_UPDATES = 1; 
 set @sql = concat('select * from ', @temptablename);
 prepare stml from @sql;
 execute stml;

END

Django中使用Bootstrap展示树形结构(这一篇还没有仔细看过，应该有用）
http://www.mamicode.com/info-detail-1255874.html
这一个是把parentmoney在选择的时候，按层次缩进，看得更清楚一些：
http://www.codeweblog.com/%E5%A6%82%E4%BD%95%E4%BD%BFforeignkey%E5%AD%97%E6%AE%B5%E6%98%BE%E7%A4%BA%E6%A0%91%E7%8A%B6%E7%BB%93%E6%9E%84/

